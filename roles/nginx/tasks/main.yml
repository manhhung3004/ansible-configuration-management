- name: Install prerequisites for Docker
  apt:
    name: "{{ item }}"
    state: present
  loop:
  - ca-certificates
  - curl
  - gnupg
  - lsb-release
  - software-properties-common
  become: true

- name: Create the /etc/apt/keyrings directory
  file:
    path: /etc/apt/keyrings
    state: directory
    mode: '0755'
  become: true

- name: Add Docker's official GPG key
  shell: |
    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | tee /etc/apt/keyrings/docker.asc
    chmod a+r /etc/apt/keyrings/docker.asc
  become: true

- name: Add Docker repository
  apt_repository:
    repo: "deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release | lower }} stable"
    state: present
    update_cache: yes
    filename: docker
  become: true

- name: Update apt cache
  apt:
    update_cache: yes
  become: true

- name: Install Docker packages (latest version)
  apt:
    name:
    - docker-ce
    - docker-ce-cli
    - containerd.io
    - docker-buildx-plugin
    - docker-compose-plugin
    state: present
  become: true

- name: Create directory for docker-compose files
  file:
    path: /home/data
    state: directory
    mode: '0755'
    owner: root
    group: root
  become: true

- name: Deploy docker-compose file for Elasticsearch
  copy:
    src: files/docker-compose.elasticsearch.yml
    dest: /home/data/docker-compose.elasticsearch.yml
    mode: '0644'
    owner: root
    group: root
  become: true

- name: Copy .env file for Elasticsearch
  copy:
    src: files/.env
    dest: /home/data/.env
    mode: '0644'
    owner: root
    group: root
  become: true

- name: Stop and remove all running containers related to docker-compose
  shell: |
    docker-compose -f /home/data/docker-compose.elasticsearch.yml down
    docker system prune -f
  args:
    chdir: /home/data
  become: true

- name: Remove Docker volumes related to docker-compose
  shell: docker volume prune -f
  become: true

- name: Wait for containers to stop before running docker-compose again
  pause:
    seconds: 10
  become: true

- name: Run docker-compose for Elasticsearch
  shell: |
    docker compose -f /home/data/docker-compose.elasticsearch.yml up -d
  args:
    chdir: /home/data
  become: true
  register: docker_compose_up

# - name: Check if Elasticsearch container is healthy
#   shell: |
#     docker inspect --format '{{.State.Health.Status}}' $(docker ps -q --filter "name=data-es01-1")
#   register: health_status
#   retries: 5
#   delay: 10
#   until: health_status.stdout == "healthy"
#   become: true
